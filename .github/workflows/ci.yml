name: CI / Security Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write  # For CodeQL
  actions: read
  id-token: write

jobs:
  build-and-test:
    name: Build & Test with Gradle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Grant execute to gradlew
        run: chmod +x ./gradlew

      - name: Build and run tests
        run: ./gradlew clean build

  codeql-scan:
    name: Static Code Analysis (CodeQL)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  gitleaks:
    name: Secret Scanning (Gitleaks)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          fail: true

  docker-build-and-scan:
    name: Docker Build, Trivy & Scout
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker (if pushing later)
        run: echo "Skipping login - add secrets if needed"

      - name: Build Docker image
        run: docker build -t demo-app:latest .

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@v0.9.2
        with:
          image-ref: demo-app:latest
          format: table
          exit-code: 1
          ignore-unfixed: true

      - name: Run Docker Scout scan
        uses: docker/scout-action@v1
        with:
          image: demo-app:latest
          only-severities: critical,high
          sarif-file: scout-results.sarif
          summary: true

      - name: Upload Scout SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: scout-results.sarif
