name: CI / Security Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write
  actions: read
  id-token: write

jobs:
  build-and-test:
    name: Build & Test with Gradle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Build and run tests
        run: |
          if [ -x ./gradlew ]; then
            ./gradlew clean build
          else
            gradle clean build
          fi

  codeql-scan:
    name: Static Code Analysis (CodeQL)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Build with CodeQL autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  gitleaks:
    name: Secret Scanning (Gitleaks)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          fail: true

  docker-build-and-scan:
    name: Docker Build, Trivy & Scout
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SNYK_ORG: ${{ vars.SNYK_ORG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - run: |
          java -version
          echo "JAVA_HOME=$JAVA_HOME"
          ./gradlew -v

      - name: Build Boot JAR
        run: |
          if [ -x ./gradlew ]; then
            ./gradlew clean bootJar
          else
            gradle clean bootJar
          fi

      - name: Verify Boot JAR exists
        run: |
          echo "Listing build/libs contents:" && ls -l build/libs || true
          JAR_COUNT=$(ls build/libs/*-SNAPSHOT.jar 2>/dev/null | wc -l | tr -d ' ')
          if [ "$JAR_COUNT" -eq 0 ]; then
            echo "ERROR: No Boot JAR found in build/libs. Did the build succeed?" >&2
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t demo-app:latest .

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: demo-app:latest
          format: table
          exit-code: 1
          ignore-unfixed: true

      - name: Trivy SARIF (image)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: demo-app:latest
          format: sarif
          output: trivy-results.sarif
          vuln-type: os,library
          severity: HIGH,CRITICAL
          ignore-unfixed: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - run: |
          java -version
          echo "JAVA_HOME=$JAVA_HOME"
          ./gradlew -v

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Set up Snyk
        if: ${{ env.SNYK_TOKEN != '' }}
        uses: snyk/actions/node@master

      - name: Snyk Open Source (Gradle) test
        if: ${{ env.SNYK_TOKEN != '' }}
        run: |
          snyk test --all-projects --exclude=test --severity-threshold=high --org=${{ vars.SNYK_ORG }} --sarif-file-output=snyk-os.sarif || true

      - name: Snyk Container test (image)
        if: ${{ env.SNYK_TOKEN != '' }}
        run: |
          snyk container test demo-app:latest --file=Dockerfile --severity-threshold=high --org=${{ vars.SNYK_ORG }} --sarif-file-output=snyk-container.sarif || true

      - name: Upload Snyk SARIF (Open Source)
        if: ${{ env.SNYK_TOKEN != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-os.sarif

      - name: Upload Snyk SARIF (Container)
        if: ${{ env.SNYK_TOKEN != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-container.sarif

  sonarqube-scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: https://sonarcloud.io

    steps:
      - name: Checkout code
        if: ${{ env.SONAR_TOKEN != '' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        if: ${{ env.SONAR_TOKEN != '' }}
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Build (classes for analysis)
        if: ${{ env.SONAR_TOKEN != '' }}
        run: |
          if [ -x ./gradlew ]; then
            ./gradlew clean test jacocoTestReport
          else
            gradle clean test jacocoTestReport
          fi

      - name: SonarCloud Scan
        if: ${{ env.SONAR_TOKEN != '' }}
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.projectKey=viplavfauzdar_springboot-role-based-restriction
            -Dsonar.organization=viplavfauzdar
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=build/classes/java/main
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml

      - name: SonarCloud Quality Gate
        if: ${{ env.SONAR_TOKEN != '' }}
        uses: SonarSource/sonarqube-quality-gate-action@v1.2.0
        with:
          pollingTimeoutSec: 600
