name: CI / Security Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write
  actions: read
  id-token: write

jobs:
  build-and-test:
    name: Build & Test with Gradle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Build and run tests
        run: |
          if [ -x ./gradlew ]; then
            ./gradlew clean build
          else
            gradle clean build
          fi

  codeql-scan:
    name: Static Code Analysis (CodeQL)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Build with CodeQL autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  gitleaks:
    name: Secret Scanning (Gitleaks)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          fail: true

  docker-build-and-scan:
    name: Docker Build, Trivy & Scout
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Boot JAR
        run: |
          if [ -x ./gradlew ]; then
            ./gradlew clean bootJar
          else
            gradle clean bootJar
          fi

      - name: Verify Boot JAR exists
        run: |
          echo "Listing build/libs contents:" && ls -l build/libs || true
          JAR_COUNT=$(ls build/libs/*-SNAPSHOT.jar 2>/dev/null | wc -l | tr -d ' ')
          if [ "$JAR_COUNT" -eq 0 ]; then
            echo "ERROR: No Boot JAR found in build/libs. Did the build succeed?" >&2
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t demo-app:latest .

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: demo-app:latest
          format: table
          exit-code: 1
          ignore-unfixed: true

      - name: Run Docker Scout scan
        uses: docker/scout-action@v1
        with:
          image: demo-app:latest
          only-severities: critical,high
          sarif-file: scout-results.sarif
          summary: true

      - name: Upload Scout SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scout-results.sarif
